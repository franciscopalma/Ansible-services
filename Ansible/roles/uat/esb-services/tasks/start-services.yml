- name: Check if ASM Database is running
  shell: "ps -ef | grep -v grep | grep -c asm_pmon"
  when: inventory_hostname in groups['esb-uat-database']
  register: databaseasm
  failed_when: databaseasm not in [ 1 ]‚Äù
  tags: start

- name: Print ps -ef
  ansible.builtin.debug:
    msg: databaseasm

- name: Start ASM Database 
  ignore_errors: true
  command: sudo /opt/grid/19.3.0/bin/crsctl start crs -wait
  when: 
    - inventory_hostname in groups['esb-uat-database']
    - databaseasm.stdout != "1"
  tags: start

- name: Check if WEBMUDB Database is running
  shell: ps -ef | grep -v grep | grep -c ora_pmon_WEBMUDB
  when: inventory_hostname in groups['esb-uat-database']
  register: databasewebmudb
  tags: start  

- name: Start WEBMDDB1 Database 
  ignore_errors: true
  command: sudo -iu oracle /opt/oracle/19.3.0/bin/srvctl start database -d WEBMUDB
  when: 
    - inventory_hostname in groups['esb-uat-database']
    - databasewebmudb.stdout != "1"
  tags: start

- name: Start Universal Messaging Server
  ansible.builtin.systemd:
    state: started
    name: um.service
  when: inventory_hostname in groups['esb-uat-ums']
  tags: start

- name: Start Terracotta
  ansible.builtin.systemd:
    state: started
    name: terracotta.service
  when: inventory_hostname in groups['esb-uat-terracota-is']
  tags: start

- name: Start Integration Server
  ansible.builtin.systemd:
    state: started
    name: is.service
  when: inventory_hostname in groups['esb-uat-terracota-is']
  tags: start

- name: Start My Webmethods Server
  ansible.builtin.systemd:
    state: started
    name: mws.service
  when: inventory_hostname in groups['esb-uat-mws']
  tags: start





